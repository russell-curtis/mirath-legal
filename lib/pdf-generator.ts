/**
 * PDF Generation Service for Mirath Legal
 * Handles conversion of will documents to professional PDF format
 */

import puppeteer from 'puppeteer';
import { promises as fs } from 'fs';
import { join } from 'path';
import { tmpdir } from 'os';

export interface PDFOptions {
  format?: 'A4' | 'Letter';
  margin?: {
    top?: string;
    right?: string;
    bottom?: string;
    left?: string;
  };
  displayHeaderFooter?: boolean;
  headerTemplate?: string;
  footerTemplate?: string;
  printBackground?: boolean;
}

export interface WillPDFData {
  title: string;
  content: string;
  metadata: {
    testatorName?: string;
    willType?: string;
    generatedAt?: string;
    language?: string;
    difcCompliant?: boolean;
    documentId?: string;
  };
}

const DEFAULT_PDF_OPTIONS: PDFOptions = {
  format: 'A4',
  margin: {
    top: '1in',
    right: '1in',
    bottom: '1in',
    left: '1in',
  },
  displayHeaderFooter: true,
  printBackground: true,
  headerTemplate: `
    <div style="font-size: 10px; margin: 0 auto; color: #666; text-align: center; width: 100%;">
      <span>DIFC-Compliant Will Document</span>
    </div>
  `,
  footerTemplate: `
    <div style="font-size: 10px; margin: 0 auto; color: #666; text-align: center; width: 100%;">
      <span>Page <span class="pageNumber"></span> of <span class="totalPages"></span> | Generated by Mirath Legal | CONFIDENTIAL</span>
    </div>
  `,
};

export async function generateWillPDF(
  willData: WillPDFData,
  options: PDFOptions = {}
): Promise<Buffer> {
  const mergedOptions = { ...DEFAULT_PDF_OPTIONS, ...options };
  
  let browser;
  try {
    // Launch Puppeteer
    browser = await puppeteer.launch({
      headless: true,
      args: ['--no-sandbox', '--disable-setuid-sandbox'],
    });

    const page = await browser.newPage();

    // Generate HTML content for the will
    const htmlContent = generateWillHTML(willData);

    // Set content and wait for any fonts/styles to load
    await page.setContent(htmlContent, { waitUntil: 'networkidle0' });

    // Generate PDF
    const pdfBuffer = await page.pdf({
      format: mergedOptions.format as any,
      margin: mergedOptions.margin,
      displayHeaderFooter: mergedOptions.displayHeaderFooter,
      headerTemplate: mergedOptions.headerTemplate,
      footerTemplate: mergedOptions.footerTemplate,
      printBackground: mergedOptions.printBackground,
    });

    return Buffer.from(pdfBuffer);

  } catch (error) {
    console.error('PDF generation error:', error);
    throw new Error('Failed to generate PDF');
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

function generateWillHTML(willData: WillPDFData): string {
  const { title, content, metadata } = willData;
  
  return `
<!DOCTYPE html>
<html lang="${metadata.language === 'ar' ? 'ar' : 'en'}" ${metadata.language === 'ar' ? 'dir="rtl"' : ''}>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${title}</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Times New Roman', serif;
      font-size: 12pt;
      line-height: 1.6;
      color: #000;
      background: white;
      max-width: 100%;
    }

    .document-header {
      text-align: center;
      margin-bottom: 40px;
      border-bottom: 2px solid #000;
      padding-bottom: 20px;
    }

    .document-title {
      font-size: 18pt;
      font-weight: bold;
      margin-bottom: 10px;
      text-transform: uppercase;
      letter-spacing: 1px;
    }

    .document-subtitle {
      font-size: 14pt;
      font-style: italic;
      color: #333;
      margin-bottom: 5px;
    }

    .document-meta {
      font-size: 10pt;
      color: #666;
    }

    .will-content {
      white-space: pre-line;
      text-align: justify;
      margin-bottom: 40px;
    }

    .section-header {
      font-weight: bold;
      font-size: 14pt;
      margin: 30px 0 15px 0;
      text-transform: uppercase;
      border-bottom: 1px solid #ccc;
      padding-bottom: 5px;
    }

    .clause-number {
      font-weight: bold;
      margin: 20px 0 10px 0;
    }

    .signature-section {
      margin-top: 60px;
      page-break-inside: avoid;
    }

    .signature-line {
      border-bottom: 1px solid #000;
      width: 250px;
      margin: 30px 0 5px 0;
      display: inline-block;
    }

    .signature-label {
      font-size: 10pt;
      font-style: italic;
      color: #666;
    }

    .witness-section {
      margin-top: 40px;
      display: flex;
      justify-content: space-between;
      page-break-inside: avoid;
    }

    .witness-block {
      width: 45%;
    }

    .compliance-footer {
      margin-top: 60px;
      padding-top: 20px;
      border-top: 2px solid #000;
      font-size: 10pt;
      background-color: #f9f9f9;
      padding: 20px;
      page-break-inside: avoid;
    }

    .compliance-title {
      font-weight: bold;
      font-size: 12pt;
      margin-bottom: 10px;
      color: #2563eb;
    }

    .compliance-status {
      display: inline-block;
      padding: 4px 8px;
      border-radius: 4px;
      font-size: 9pt;
      font-weight: bold;
      color: white;
      background-color: ${metadata.difcCompliant ? '#10b981' : '#ef4444'};
    }

    .page-break {
      page-break-before: always;
    }

    @media print {
      body {
        font-size: 11pt;
      }
      
      .document-header {
        margin-bottom: 30px;
      }
      
      .will-content {
        margin-bottom: 30px;
      }
    }

    /* Arabic language specific styles */
    ${metadata.language === 'ar' ? `
      body {
        font-family: 'Amiri', 'Times New Roman', serif;
        direction: rtl;
        text-align: right;
      }
      
      .document-title {
        font-family: 'Amiri', serif;
      }
      
      .will-content {
        text-align: right;
      }
    ` : ''}
  </style>
</head>
<body>
  <div class="document-header">
    <div class="document-title">${title}</div>
    <div class="document-subtitle">Dubai International Financial Centre (DIFC) Compliant Will</div>
    <div class="document-meta">
      <div>Document ID: ${metadata.documentId || 'N/A'}</div>
      <div>Generated: ${metadata.generatedAt ? new Date(metadata.generatedAt).toLocaleDateString() : new Date().toLocaleDateString()}</div>
      <div>Language: ${metadata.language === 'ar' ? 'Arabic' : 'English'}</div>
      <div>Type: ${metadata.willType?.replace('_', ' ').toUpperCase() || 'STANDARD'} WILL</div>
      <div class="compliance-status">${metadata.difcCompliant ? 'DIFC COMPLIANT' : 'REQUIRES REVIEW'}</div>
    </div>
  </div>

  <div class="will-content">${content.replace(/\n/g, '<br>')}</div>

  <div class="compliance-footer">
    <div class="compliance-title">DIFC Compliance Information</div>
    <p><strong>Legal Framework:</strong> This will has been prepared in accordance with DIFC Law No. 5 of 2012 (DIFC Wills and Probate Registry Law) and DIFC regulatory requirements for expatriate wills in the United Arab Emirates.</p>
    
    <p><strong>Registration Requirements:</strong> To be legally effective, this will must be:</p>
    <ul style="margin: 10px 0; padding-left: 20px;">
      <li>Signed by the testator in the presence of two witnesses</li>
      <li>Witnessed by two competent adults who are not beneficiaries</li>
      <li>Submitted to the DIFC Wills and Probate Registry with required fees</li>
      <li>Accompanied by supporting identification documents</li>
    </ul>

    <p><strong>Important Notice:</strong> This document is computer-generated and must be reviewed by a qualified legal professional before execution. Mirath Legal provides this as a draft document only. Legal advice should be sought for complex estate planning matters.</p>

    <p style="margin-top: 15px; font-size: 9pt; color: #666;">
      <strong>Generated by:</strong> Mirath Legal AI-Powered Estate Planning Platform<br>
      <strong>Technology:</strong> OpenAI GPT-4 with DIFC Legal Templates<br>
      <strong>Version:</strong> 1.0 | <strong>Classification:</strong> CONFIDENTIAL
    </p>
  </div>
</body>
</html>
  `.trim();
}

// Alternative PDF generation using jsPDF for lighter weight
export async function generateSimplePDF(
  willData: WillPDFData
): Promise<Buffer> {
  // This would use jsPDF for simpler PDF generation
  // Implementation would go here if Puppeteer is too heavy
  throw new Error('Simple PDF generation not yet implemented');
}

// Utility function to save PDF to temporary file
export async function savePDFToTemp(
  pdfBuffer: Buffer,
  filename: string = 'will-document.pdf'
): Promise<string> {
  const tempPath = join(tmpdir(), filename);
  await fs.writeFile(tempPath, pdfBuffer);
  return tempPath;
}

// Utility function to get PDF metadata
export function getPDFMetadata(willData: WillPDFData) {
  return {
    title: willData.title,
    author: 'Mirath Legal',
    subject: 'DIFC-Compliant Will Document',
    creator: 'Mirath Legal AI Platform',
    producer: 'Puppeteer PDF Generator',
    creationDate: new Date(),
    modificationDate: new Date(),
    keywords: [
      'Will',
      'Testament',
      'DIFC',
      'UAE',
      'Estate Planning',
      willData.metadata.willType,
    ].filter(Boolean).join(', '),
  };
}